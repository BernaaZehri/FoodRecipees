/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BL.Ingredient;
import BL.IngredientCategory;
import BL.RecipeIngredient;
import BL.UnitDetails;
import DAL.IngredientCategoryRepository;
import DAL.IngredientRepository;
import DAL.RecetaException;
import DAL.RecipeIngredientRepository;
import DAL.UnitDetailsRepository;
import GUI.Models.IngredientCategoryComboBox;
import GUI.Models.IngredientComboBox;
import GUI.Models.IngredientTableModel;
import GUI.Models.RecipeIngredientTableModel;
import GUI.Models.UnitDetailsComboBox;
import java.math.BigDecimal;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class RecipeIngredientForm extends javax.swing.JInternalFrame {
        IngredientRepository ir = new IngredientRepository();
    IngredientTableModel it = new IngredientTableModel();
    IngredientCategoryRepository icr = new IngredientCategoryRepository();
    IngredientCategoryComboBox iccb = new IngredientCategoryComboBox();
    UnitDetailsComboBox udcb = new UnitDetailsComboBox();
    UnitDetailsRepository udr = new UnitDetailsRepository();
    IngredientRepository irr = new IngredientRepository();
    IngredientComboBox icb = new IngredientComboBox();
    RecipeIngredientRepository rir = new RecipeIngredientRepository();
    RecipeIngredientTableModel ritm = new RecipeIngredientTableModel();
            
    JDesktopPane desktopPane;
    
    public RecipeIngredientForm() {
        initComponents();
          loadTable();
        loadComboBox();
        
    }
    
    public RecipeIngredientForm(JDesktopPane desktopPane){
        initComponents();
          loadTable();
        loadComboBox();
        this.desktopPane = desktopPane;
    }
    
    
    public void loadComboBox() {
        try {
            List<IngredientCategory> lista = icr.findAll();
            List<Ingredient> lista1 = ir.findAll();
            List<UnitDetails> lista2 = udr.findAll();
            
          
            udcb.add(lista2);
            unitCMB.setModel(udcb);
            unitCMB.repaint();
        } catch (RecetaException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
   
     


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quantityTxt = new javax.swing.JTextField();
        unitCMB = new javax.swing.JComboBox();
        saveBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientTable = new javax.swing.JTable();
        categoryTxt = new javax.swing.JTextField();
        titleTxt = new javax.swing.JTextField();

        setClosable(true);

        quantityTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTxtActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        ingredientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ingredientTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quantityTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(categoryTxt))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(unitCMB, 0, 102, Short.MAX_VALUE)
                            .addComponent(titleTxt))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitCMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(saveBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quantityTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTxtActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
          int row = ingredientTable.getSelectedRow();
        if (row == -1) {
            RecipeIngredient i = new RecipeIngredient();
            this.titleTxt.setText(title);
            
            i.setQuantity(new BigDecimal(quantityTxt.getText()));
            i.setUnitDetailsID((UnitDetails) udcb.getSelectedItem());
           
            try {

                rir.create(i);
                clear();
                loadTable();
            } catch (RecetaException ex) {
                JOptionPane.showMessageDialog(null, "Gabim diqka!");
            }
        } else {
            RecipeIngredient i = ritm.getRecipeIngredient(row);

            try {
                rir.edit(i);
                clear();
                loadTable();
            } catch (RecetaException ex) {
                JOptionPane.showMessageDialog(null, "Gabim diqka!");
            }

        }

    }//GEN-LAST:event_saveBtnActionPerformed
     private void loadTable() {
        try {
            List<RecipeIngredient> list = rir.findAll();
            ritm.addList(list);
            ingredientTable.setModel(ritm);
            ritm.fireTableDataChanged();
        } catch (RecetaException ex) {
            Logger.getLogger(RecipeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     public void clear() {
        ingredientTable.clearSelection();
        quantityTxt.setText("");

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField categoryTxt;
    private javax.swing.JTable ingredientTable;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField quantityTxt;
    private javax.swing.JButton saveBtn;
    public javax.swing.JTextField titleTxt;
    private javax.swing.JComboBox unitCMB;
    // End of variables declaration//GEN-END:variables
}
